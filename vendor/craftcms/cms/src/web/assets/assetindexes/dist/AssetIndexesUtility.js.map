{"version":3,"file":"AssetIndexesUtility.js","mappings":"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","sources":["webpack:///./AssetIndexesUtility.js"],"sourcesContent":["(function($) {\n    Craft.AssetIndexesUtility = Garnish.Base.extend({\n        $trigger: null,\n        $form: null,\n\n        totalActions: null,\n        completedActions: null,\n        loadingActions: null,\n        queue: null,\n\n        cacheImages: false,\n        sessionId: null,\n\n        init: function(formId) {\n            this.$form = $('#' + formId);\n            this.$trigger = $('input.submit', this.$form);\n            this.$status = $('.utility-status', this.$form);\n\n            this.addListener(this.$form, 'submit', 'onSubmit');\n        },\n\n        onSubmit: function(ev) {\n            ev.preventDefault();\n\n            if (!this.$trigger.hasClass('disabled')) {\n                if (!this.progressBar) {\n                    this.progressBar = new Craft.ProgressBar(this.$status, true);\n                } else {\n                    this.progressBar.resetProgressBar();\n                }\n\n                this.totalActions = 0;\n                this.loadingActions = 0;\n                this.completedActions = 0;\n                this.queue = [];\n\n                this.progressBar.$progressBar.removeClass('hidden');\n                this.progressBar.$progressBarStatus.removeClass('hidden');\n\n                this.progressBar.$progressBar.velocity('stop').velocity({\n                    opacity: 1\n                }, {\n                    complete: () => {\n                        var postData = Garnish.getPostData(this.$form),\n                            params = Craft.expandPostArray(postData);\n                        params.start = true;\n\n                        this.cacheImages = params.cacheImages;\n\n                        Craft.postActionRequest('utilities/asset-index-perform-action', {params}, response => {\n                            if (response.indexingData) {\n                                this.sessionId = response.indexingData.sessionId;\n\n                                // Load up all the data\n                                for (var i = 0; i < response.indexingData.volumes.length; i++) {\n                                    var volumeData = response.indexingData.volumes[i];\n\n                                    for (var requestCounter = 0; requestCounter < volumeData.total; requestCounter++) {\n                                        this.queue.push({\n                                            process: true,\n                                            sessionId: this.sessionId,\n                                            volumeId: volumeData.volumeId,\n                                            cacheImages: this.cacheImages\n                                        });\n                                        this.totalActions++;\n                                    }\n                                }\n\n                                if (this.totalActions > 0) {\n                                    this.processIndexing();\n                                } else {\n                                    this.finishIndexing();\n                                }\n                            }\n                        });\n                    },\n                });\n\n                if (this.$allDone) {\n                    this.$allDone.css('opacity', 0);\n                }\n\n                this.$trigger.addClass('disabled');\n                this.$trigger.trigger('blur');\n            }\n        },\n\n        updateProgressBar: function() {\n            this.progressBar.setItemCount(this.totalActions);\n            this.progressBar.setProcessedItemCount(this.completedActions);\n            this.progressBar.updateProgressBar();\n        },\n\n        processIndexing: function() {\n            if (this.completedActions + this.loadingActions < this.totalActions && this.loadingActions < Craft.AssetIndexesUtility.maxConcurrentActions) {\n                this.loadingActions++;\n\n                var params = this.queue.shift();\n                Craft.postActionRequest('utilities/asset-index-perform-action', {params}, response => {\n                    this.loadingActions--;\n                    this.completedActions++;\n\n                    this.updateProgressBar();\n\n                    if (response && response.error) {\n                        alert(response.error);\n                    }\n\n                    if (this.completedActions == this.totalActions) {\n                        this.finishIndexing();\n                    } else {\n                        this.processIndexing();\n                    }\n                });\n\n                // Try again, in case we have more space.\n                this.processIndexing();\n            }\n        },\n\n        showConfirmDialog: function(data) {\n            var $modal = $('<form class=\"modal fitted confirmmodal\"/>').appendTo(Garnish.$bod),\n                $body = $('<div class=\"body\"/>').appendTo($modal).html(data.confirm),\n                $footer = $('<footer class=\"footer\"/>').appendTo($modal),\n                $buttons = $('<div class=\"buttons right\"/>').appendTo($footer);\n\n            if (data.showDelete) {\n                let $cancelBtn = $('<button/>', {\n                    type: 'button',\n                    class: 'btn',\n                    text: Craft.t('app', 'Keep them'),\n                }).appendTo($buttons);\n                $('<button/>', {\n                    type: 'submit',\n                    class: 'btn submit',\n                    text: Craft.t('app', 'Delete them'),\n                }).appendTo($buttons);\n\n                this.addListener($cancelBtn, 'click', function() {\n                    modal.hide();\n                    this.onComplete();\n                });\n            } else {\n                $('<button/>', {\n                    type: 'submit',\n                    class: 'btn submit',\n                    text: Craft.t('app', 'OK'),\n                }).appendTo($buttons);\n            }\n\n            Craft.initUiElements($body);\n\n            var modal = new Garnish.Modal($modal, {\n                hideOnEsc: false,\n                hideOnShadeClick: false,\n            });\n\n            this.addListener($modal, 'submit', function(ev) {\n                ev.preventDefault();\n\n                modal.settings.onHide = $.noop;\n                modal.hide();\n\n                var postData = Garnish.getPostData($body);\n                var params = Craft.expandPostArray(postData);\n\n                $.extend(params, data.params);\n                params.finish = true;\n\n                Craft.postActionRequest('utilities/asset-index-perform-action', {params}, $.noop);\n                this.onComplete();\n            });\n        },\n\n        finishIndexing: function() {\n            var params = {\n                sessionId: this.sessionId,\n                overview: true\n            };\n\n            Craft.postActionRequest('utilities/asset-index-perform-action', {params}, response => {\n                if (response.confirm) {\n                    this.hideProgressBar();\n                    this.showConfirmDialog(response);\n                } else {\n                    this.onComplete();\n                }\n            });\n        },\n\n        hideProgressBar: function() {\n            this.progressBar.$progressBarStatus.addClass('hidden');\n            this.progressBar.$progressBar.velocity({opacity: 0}, {\n                duration: 'fast'\n            });\n        },\n\n        onComplete: function() {\n            this.hideProgressBar();\n\n            if (!this.$allDone) {\n                this.$allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo(this.$status);\n                this.$allDone.css('opacity', 0);\n                this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n                this.$trigger.removeClass('disabled');\n                this.$trigger.trigger('focus');\n            }\n        }\n    }, {\n        maxConcurrentActions: 3\n    });\n})(jQuery);\n"],"names":["$","jQuery","Craft","AssetIndexesUtility","Garnish","Base","extend","$trigger","$form","totalActions","completedActions","loadingActions","queue","cacheImages","sessionId","init","formId","this","$status","addListener","onSubmit","ev","preventDefault","hasClass","progressBar","resetProgressBar","ProgressBar","$progressBar","removeClass","$progressBarStatus","velocity","opacity","complete","postData","getPostData","params","expandPostArray","start","postActionRequest","response","indexingData","i","volumes","length","volumeData","requestCounter","total","push","process","volumeId","processIndexing","finishIndexing","$allDone","css","addClass","trigger","updateProgressBar","setItemCount","setProcessedItemCount","maxConcurrentActions","shift","error","alert","showConfirmDialog","data","$modal","appendTo","$bod","$body","html","confirm","$footer","$buttons","showDelete","$cancelBtn","type","class","text","t","modal","hide","onComplete","initUiElements","Modal","hideOnEsc","hideOnShadeClick","settings","onHide","noop","finish","overview","hideProgressBar","duration"],"sourceRoot":""}