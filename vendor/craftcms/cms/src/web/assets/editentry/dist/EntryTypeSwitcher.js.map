{"version":3,"file":"EntryTypeSwitcher.js","mappings":"YAAA,IAAUA,EAAAA,EA2DPC,OAxDCC,MAAMC,kBAAoBC,QAAQC,KAAKC,OAAO,CAC1CC,YAAa,KACbC,SAAU,KAEVC,KAAM,WACFC,KAAKH,YAAcP,EAAE,cACrBU,KAAKF,SAAWR,EAAE,iCAAiCW,YAAYD,KAAKH,YAAYK,UAEhFF,KAAKG,YAAYH,KAAKH,YAAa,SAAU,iBAGjDO,aAAc,SAASC,GAAI,WACvBL,KAAKF,SAASQ,YAAY,UAE1Bd,MAAMe,kBAAkB,4BAA6Bf,MAAMgB,GAAGC,aAAaC,aAAa,SAACC,EAAUC,GAG/F,GAFA,EAAKd,SAASe,SAAS,UAEJ,YAAfD,EAA0B,CAC1B,EAAKE,QAAQ,oBAEb,IAAMC,EAAQzB,EAAE,SAEhB,GAAIqB,EAASK,SACT,GAAID,EAAME,OACNF,EAAMG,YAAYP,EAASK,cACxB,CACH,IAAMG,EAAiB7B,EAAE,YAAa,CAClC8B,GAAI,iBACJC,MAAO,gBACRC,UAAUhC,EAAE,aACfA,EAAEqB,EAASK,UAAUO,SAASJ,GAAgBK,KAAK,KAAM,aAG7DlC,EAAE,mBAAmBmC,SAGzBjC,MAAMgB,GAAGkB,WAETpC,EAAE,WAAWqC,KAAKhB,EAASiB,YAC3BpC,MAAMqC,eAAevC,EAAE,YACvBE,MAAMsC,eAAenB,EAASoB,UAC9BvC,MAAMwC,eAAerB,EAASsB,UAGD,oBAAlBC,eACPA,cAAcC,aAAa,UAG/B,EAAKrB,QAAQ,cAGbsB,OAAOC,YAAYC,mB","sources":["webpack:///./EntryTypeSwitcher.js"],"sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.EntryTypeSwitcher = Garnish.Base.extend({\n        $typeSelect: null,\n        $spinner: null,\n\n        init: function() {\n            this.$typeSelect = $('#entryType');\n            this.$spinner = $('<div class=\"spinner hidden\"/>').insertAfter(this.$typeSelect.parent());\n\n            this.addListener(this.$typeSelect, 'change', 'onTypeChange');\n        },\n\n        onTypeChange: function(ev) {\n            this.$spinner.removeClass('hidden');\n\n            Craft.postActionRequest('entries/switch-entry-type', Craft.cp.$primaryForm.serialize(), (response, textStatus) => {\n                this.$spinner.addClass('hidden');\n\n                if (textStatus === 'success') {\n                    this.trigger('beforeTypeChange');\n\n                    const $tabs = $('#tabs');\n\n                    if (response.tabsHtml) {\n                        if ($tabs.length) {\n                            $tabs.replaceWith(response.tabsHtml);\n                        } else {\n                            const $contentHeader = $('<header/>', {\n                                id: 'content-header',\n                                class: 'pane-header',\n                            }).prependTo($('#content'));\n                            $(response.tabsHtml).appendTo($contentHeader).attr('id', 'tabs');\n                        }\n                    } else {\n                        $('#content-header').remove();\n                    }\n\n                    Craft.cp.initTabs();\n\n                    $('#fields').html(response.fieldsHtml);\n                    Craft.initUiElements($('#fields'));\n                    Craft.appendHeadHtml(response.headHtml);\n                    Craft.appendFootHtml(response.bodyHtml);\n\n                    // Update the slug generator with the new title input\n                    if (typeof slugGenerator !== 'undefined') {\n                        slugGenerator.setNewSource('#title');\n                    }\n\n                    this.trigger('typeChange');\n\n                    // Trigger an autosave with the new form data\n                    window.draftEditor.checkForm();\n                }\n            });\n        }\n    });\n})(jQuery);\n"],"names":["$","jQuery","Craft","EntryTypeSwitcher","Garnish","Base","extend","$typeSelect","$spinner","init","this","insertAfter","parent","addListener","onTypeChange","ev","removeClass","postActionRequest","cp","$primaryForm","serialize","response","textStatus","addClass","trigger","$tabs","tabsHtml","length","replaceWith","$contentHeader","id","class","prependTo","appendTo","attr","remove","initTabs","html","fieldsHtml","initUiElements","appendHeadHtml","headHtml","appendFootHtml","bodyHtml","slugGenerator","setNewSource","window","draftEditor","checkForm"],"sourceRoot":""}