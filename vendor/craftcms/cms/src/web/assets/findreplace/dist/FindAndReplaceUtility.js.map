{"version":3,"file":"FindAndReplaceUtility.js","mappings":"YAAA,IAAUA,EAAAA,EAmFPC,OAlFCC,MAAMC,sBAAwBC,QAAQC,KAAKC,OAAO,CAC9CC,SAAU,KACVC,MAAO,KAEPC,KAAM,SAASC,GACXC,KAAKH,MAAQR,EAAE,IAAMU,GACrBC,KAAKJ,SAAWP,EAAE,eAAgBW,KAAKH,OACvCG,KAAKC,QAAUZ,EAAE,kBAAmBW,KAAKH,OAEzCG,KAAKE,YAAYF,KAAKH,MAAO,SAAU,aAG3CM,SAAU,SAASC,GAAI,WACnBA,EAAGC,iBAEEL,KAAKJ,SAASU,SAAS,cACnBN,KAAKO,YAGNP,KAAKO,YAAYC,mBAFjBR,KAAKO,YAAc,IAAIhB,MAAMkB,YAAYT,KAAKC,SAKlDD,KAAKO,YAAYG,aAAaC,YAAY,UAE1CX,KAAKO,YAAYG,aAAaE,SAAS,QAAQA,SAAS,CACpDC,QAAS,GACV,CACCC,SAAU,WACN,IAAIC,EAAWtB,QAAQuB,YAAY,EAAKnB,OACpCoB,EAAS1B,MAAM2B,gBAAgBH,GAE/BI,EAAO,CACPF,OAAQA,GAGZ1B,MAAM6B,kBAAkBH,EAAOI,OAAQF,GAAM,SAACG,EAAUC,GAChDD,GAAYA,EAASE,OACrBC,MAAMH,EAASE,OAGnB,EAAKE,oBAELC,WAAW,EAAKC,WAAWC,KAAK,GAAO,OACxC,CACCf,SAAUzB,EAAEyC,UAKpB9B,KAAK+B,UACL/B,KAAK+B,SAASC,IAAI,UAAW,GAGjChC,KAAKJ,SAASqC,SAAS,YACvBjC,KAAKJ,SAASsC,QAAQ,UAI9BR,kBAAmB,WAEf1B,KAAKO,YAAY4B,sBADL,MAIhBP,WAAY,WAAW,WACd5B,KAAK+B,WACN/B,KAAK+B,SAAW1C,EAAE,4CAA4C+C,SAASpC,KAAKC,SAC5ED,KAAK+B,SAASC,IAAI,UAAW,IAGjChC,KAAKO,YAAYG,aAAaE,SAAS,CAACC,QAAS,GAAI,CACjDwB,SAAU,OACVvB,SAAU,WACN,EAAKiB,SAASnB,SAAS,CAACC,QAAS,GAAI,CAACwB,SAAU,SAChD,EAAKzC,SAASe,YAAY,YAC1B,EAAKf,SAASsC,QAAQ,YAK9B3C,MAAM+C,GAAGC,kBAAiB,GAAO,M","sources":["webpack:///./FindAndReplaceUtility.js"],"sourcesContent":["(function($) {\n    Craft.FindAndReplaceUtility = Garnish.Base.extend({\n        $trigger: null,\n        $form: null,\n\n        init: function(formId) {\n            this.$form = $('#' + formId);\n            this.$trigger = $('input.submit', this.$form);\n            this.$status = $('.utility-status', this.$form);\n\n            this.addListener(this.$form, 'submit', 'onSubmit');\n        },\n\n        onSubmit: function(ev) {\n            ev.preventDefault();\n\n            if (!this.$trigger.hasClass('disabled')) {\n                if (!this.progressBar) {\n                    this.progressBar = new Craft.ProgressBar(this.$status);\n                } else {\n                    this.progressBar.resetProgressBar();\n                }\n\n                this.progressBar.$progressBar.removeClass('hidden');\n\n                this.progressBar.$progressBar.velocity('stop').velocity({\n                    opacity: 1\n                }, {\n                    complete: () => {\n                        var postData = Garnish.getPostData(this.$form),\n                            params = Craft.expandPostArray(postData);\n\n                        var data = {\n                            params: params\n                        };\n\n                        Craft.postActionRequest(params.action, data, (response, textStatus) => {\n                            if (response && response.error) {\n                                alert(response.error);\n                            }\n\n                            this.updateProgressBar();\n\n                            setTimeout(this.onComplete.bind(this), 300);\n                        }, {\n                            complete: $.noop\n                        });\n                    },\n                });\n\n                if (this.$allDone) {\n                    this.$allDone.css('opacity', 0);\n                }\n\n                this.$trigger.addClass('disabled');\n                this.$trigger.trigger('blur');\n            }\n        },\n\n        updateProgressBar: function() {\n            var width = 100;\n            this.progressBar.setProgressPercentage(width);\n        },\n\n        onComplete: function() {\n            if (!this.$allDone) {\n                this.$allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo(this.$status);\n                this.$allDone.css('opacity', 0);\n            }\n\n            this.progressBar.$progressBar.velocity({opacity: 0}, {\n                duration: 'fast',\n                complete: () => {\n                    this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n                    this.$trigger.removeClass('disabled');\n                    this.$trigger.trigger('focus');\n                },\n            });\n\n            // Just in case the tool created a new task...\n            Craft.cp.trackJobProgress(false, true);\n        }\n    });\n})(jQuery);\n"],"names":["$","jQuery","Craft","FindAndReplaceUtility","Garnish","Base","extend","$trigger","$form","init","formId","this","$status","addListener","onSubmit","ev","preventDefault","hasClass","progressBar","resetProgressBar","ProgressBar","$progressBar","removeClass","velocity","opacity","complete","postData","getPostData","params","expandPostArray","data","postActionRequest","action","response","textStatus","error","alert","updateProgressBar","setTimeout","onComplete","bind","noop","$allDone","css","addClass","trigger","setProgressPercentage","appendTo","duration","cp","trackJobProgress"],"sourceRoot":""}