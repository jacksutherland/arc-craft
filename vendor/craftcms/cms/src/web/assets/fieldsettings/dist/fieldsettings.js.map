{"version":3,"file":"fieldsettings.js","mappings":"YAAA,IAAUA,EAAAA,EAkFPC,OA/ECC,MAAMC,oBAAsBC,QAAQC,KAAKC,OAAO,CAC5CC,QAAS,KACTC,WAAY,KACZC,UAAW,KACXC,YAAa,KACbC,aAAc,KAEdC,aAAc,KACdC,sBAAsB,EAEtBC,KAAM,SAASC,EAAQC,EAAWP,EAAWQ,GACzCC,KAAKX,QAAUP,EAAEe,GACjBG,KAAKV,WAAaR,EAAEgB,GACpBE,KAAKT,UAAYA,EACjBS,KAAKR,YAAcQ,KAAKX,QAAQY,MAChCD,KAAKP,aAAe,GACpBO,KAAKE,YAAYH,EAAUf,MAAMC,oBAAoBkB,UACrDH,KAAKI,YAAYJ,KAAKX,QAAS,SAAU,uBAG7CgB,mBAAoB,WAAW,WAe3B,GAbIL,KAAKN,eACLM,KAAKL,sBAAuB,EAC5BK,KAAKN,aAAaY,SAClBpB,QAAQqB,uBAAsB,WAC1B,EAAKZ,sBAAuB,MAKpCK,KAAKP,aAAaO,KAAKR,aAAeQ,KAAKV,WAAWkB,WAAWC,SAEjET,KAAKR,YAAcQ,KAAKX,QAAQY,WAEmB,IAAxCD,KAAKP,aAAaO,KAAKR,aAAlC,CAMAQ,KAAKV,WAAWoB,KAAK,wDAGrBV,KAAKN,aAAeiB,MAAMC,YAAYC,SAEtC,IAAIC,EAAO,CACPC,KAAMf,KAAKR,aAEXQ,KAAKT,YACLuB,EAAKvB,UAAYS,KAAKT,UAAUyB,QAAQ,YAAahB,KAAKR,cAG9DR,MAAMiC,kBAAkB,OAAQ,yBAA0B,CACtDC,YAAalB,KAAKN,aAAayB,MAC/BL,KAAMA,IACPM,MAAK,SAAAC,GACJ,IAAIC,EAAYxC,EAAEuC,EAASP,KAAKS,cAAgB,IAC5C,EAAKxB,SAASyB,uBACdF,EAAYxC,EAAE,SAAU,CACpB2C,GAAIzC,MAAM0C,cAAc,EAAKlC,eAC9BmC,OAAOL,IAEd,EAAKhC,WAAWoB,KAAK,IAAIiB,OAAOL,GAChCtC,MAAM4C,eAAe,EAAKtC,YAC1BN,MAAM6C,eAAeR,EAASP,KAAKgB,UACnC9C,MAAM+C,eAAeV,EAASP,KAAKkB,aAbvC,OAcS,WACA,EAAKrC,uBACNX,MAAMiD,GAAGC,aAAalD,MAAMmD,EAAE,MAAO,6BACrC,EAAK7C,WAAWoB,KAAK,aAlCzBV,KAAKP,aAAaO,KAAKR,aAAa4C,SAASpC,KAAKV,cAsC3D,CACCa,SAAU,CACNqB,sBAAsB,K","sources":["webpack:///./fieldsettings.js"],"sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.FieldSettingsToggle = Garnish.Base.extend({\n        $toggle: null,\n        $container: null,\n        namespace: null,\n        currentType: null,\n        typeSettings: null,\n\n        _cancelToken: null,\n        _ignoreFailedRequest: false,\n\n        init: function(toggle, container, namespace, settings) {\n            this.$toggle = $(toggle);\n            this.$container = $(container);\n            this.namespace = namespace;\n            this.currentType = this.$toggle.val();\n            this.typeSettings = {};\n            this.setSettings(settings, Craft.FieldSettingsToggle.defaults);\n            this.addListener(this.$toggle, 'change', 'handleToggleChange');\n        },\n\n        handleToggleChange: function() {\n            // Cancel the current request\n            if (this._cancelToken) {\n                this._ignoreFailedRequest = true;\n                this._cancelToken.cancel();\n                Garnish.requestAnimationFrame(() => {\n                    this._ignoreFailedRequest = false;\n                });\n            }\n\n            // Save & detach the current settings\n            this.typeSettings[this.currentType] = this.$container.children().detach();\n\n            this.currentType = this.$toggle.val();\n\n            if (typeof this.typeSettings[this.currentType] !== 'undefined') {\n                this.typeSettings[this.currentType].appendTo(this.$container);\n                return;\n            }\n\n            // Show a spinner\n            this.$container.html('<div class=\"zilch\"><div class=\"spinner\"></div></div>');\n\n            // Create a cancel token\n            this._cancelToken = axios.CancelToken.source();\n\n            let data = {\n                type: this.currentType,\n            };\n            if (this.namespace) {\n                data.namespace = this.namespace.replace(/__TYPE__/g, this.currentType);\n            }\n\n            Craft.sendActionRequest('POST', 'fields/render-settings', {\n                cancelToken: this._cancelToken.token,\n                data: data\n            }).then(response => {\n                let $settings = $(response.data.settingsHtml || '');\n                if (this.settings.wrapWithTypeClassDiv) {\n                    $settings = $('<div/>', {\n                        id: Craft.formatInputId(this.currentType)\n                    }).append($settings);\n                }\n                this.$container.html('').append($settings);\n                Craft.initUiElements(this.$container);\n                Craft.appendHeadHtml(response.data.headHtml);\n                Craft.appendFootHtml(response.data.footHtml);\n            }).catch(() => {\n                if (!this._ignoreFailedRequest) {\n                    Craft.cp.displayError(Craft.t('app', 'A server error occurred.'));\n                    this.$container.html('');\n                }\n            });\n        },\n    }, {\n        defaults: {\n            wrapWithTypeClassDiv: false,\n        }\n    });\n})(jQuery);\n"],"names":["$","jQuery","Craft","FieldSettingsToggle","Garnish","Base","extend","$toggle","$container","namespace","currentType","typeSettings","_cancelToken","_ignoreFailedRequest","init","toggle","container","settings","this","val","setSettings","defaults","addListener","handleToggleChange","cancel","requestAnimationFrame","children","detach","html","axios","CancelToken","source","data","type","replace","sendActionRequest","cancelToken","token","then","response","$settings","settingsHtml","wrapWithTypeClassDiv","id","formatInputId","append","initUiElements","appendHeadHtml","headHtml","appendFootHtml","footHtml","cp","displayError","t","appendTo"],"sourceRoot":""}